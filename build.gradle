buildscript {
	ext {
		queryDslVersion = "4.4.0" // queryDSL 버젼별 차이가 있으므로, 버전을 명시하도록 한다.
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// bootJar { mainClass = "com.example.demo2.Demo2Application" }

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	compile.exclude module: 'spring-boot-starter-logging'
}

repositories {
	mavenCentral()
}

dependencies {
	// QueryDSL Duplicate class error 해결방법
	// gradle executes clean Task everytime before the compileJava task execution.
	compileJava.dependsOn clean

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-autoconfigure' // jackson
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	compile 'com.h2database:h2' // 서버모드로 사용하기 위해서는 runtimeOnly 를 compile 로 변경해야 합니다.

	compile('org.json:json:20180813')

	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// QueryDSL
	// gradle 5 이후의 annotationProcessor를 사용하여 진행한다.
	// 장점으로는 플러그인에 의존하지 않는다, 좀더 깔끔해진다.
	implementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
	annotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
	testImplementation ("com.querydsl:querydsl-jpa:${queryDslVersion}")
	testAnnotationProcessor ("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

	// Lombok
	implementation "org.projectlombok:lombok"
	annotationProcessor ("org.projectlombok:lombok")
	testImplementation ("org.projectlombok:lombok")
	testAnnotationProcessor ("org.projectlombok:lombok")

	// PrettyFormat SQL with bind parameters
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1")

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude(group: 'com.vaadin.external.google', module: 'android-json')
	}
	implementation('joda-time:joda-time:2.10.10')

	implementation 'org.apache.commons:commons-lang3:3.1'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.61'
}

test {
	useJUnitPlatform()
}

// gradle build시 *Test.class 실행하지 않기
tasks.withType(Test) {
	scanForTestClasses = false
	include "**/*Test.class" // whatever Ant pattern matches your test class files
}
